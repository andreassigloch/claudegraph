#!/usr/bin/env python3
"""
ClaudeGraph - Graph-based architecture intelligence
Simplified command wrapper for /command GrphArchitect
"""

import os
import sys
import argparse

# Add project root to path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from commands.grph_architect import GrphArchitectCLI

def main():
    """Main entry point for /claudegraph command"""
    # Create custom CLI with shorter name
    cli = GrphArchitectCLI()
    
    # Monkey patch the parser creation to use claudegraph name
    original_create_parser = cli.create_parser
    
    def create_parser_with_new_name():
        parser = original_create_parser()
        parser.prog = "claudegraph"
        return parser
    
    cli.create_parser = create_parser_with_new_name
    
    result = cli.run()
    
    if "error" in result:
        print(f"❌ Error: {result['error']}")
        return 1
    else:
        print(f"✅ {result.get('message', 'Success')}")
        if 'results' in result:
            import json
            print(json.dumps(result['results'], indent=2))
        return 0

if __name__ == "__main__":
    sys.exit(main())